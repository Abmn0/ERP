// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(YektamakDbContext))]
    [Migration("20250718081518_SatinAlmaTalepveTeklif_v2_talepdetay")]
    partial class SatinAlmaTalepveTeklif_v2_talepdetay
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Alan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AlanAd")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("alan", (string)null);
                });

            modelBuilder.Entity("AlanYetki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlanId")
                        .HasColumnType("int");

                    b.Property<bool>("DuzenlemeYetki")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("GormeYetki")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<bool>("Yetki")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AlanId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("alanyetki", (string)null);
                });

            modelBuilder.Entity("Ekran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("AltMenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int?>("SiraNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ekran", (string)null);
                });

            modelBuilder.Entity("Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("FormAd")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("MenuGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("MenuGroupId1")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("SiraNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MenuGroupId");

                    b.HasIndex("MenuGroupId1");

                    b.ToTable("menu", (string)null);
                });

            modelBuilder.Entity("MenuGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<int?>("SiraNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("menugroup", (string)null);
                });

            modelBuilder.Entity("Models.Firma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Adres")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Faks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Kod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LogoCariKod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("LogoFirmaId")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("PostaKodu")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("SehirId")
                        .HasColumnType("int");

                    b.Property<int?>("SehirId1")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("UlkeId")
                        .HasColumnType("int");

                    b.Property<int?>("UlkeId1")
                        .HasColumnType("int");

                    b.Property<string>("VergiDairesi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("VergiNo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("SehirId");

                    b.HasIndex("SehirId1");

                    b.HasIndex("UlkeId");

                    b.HasIndex("UlkeId1");

                    b.ToTable("firma", (string)null);
                });

            modelBuilder.Entity("Models.Hammadde", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Kod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("hammadde", (string)null);
                });

            modelBuilder.Entity("Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedByComputer")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsSifreDegisti")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PersonelId")
                        .HasColumnType("int");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.Property<int?>("RolId1")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UpdatedByComputer")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UpdatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("RolId");

                    b.HasIndex("RolId1");

                    b.ToTable("kullanici", (string)null);
                });

            modelBuilder.Entity("Models.MalzemeAltGrup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("DxfVar")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Kod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("MalzemeGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("PdfVar")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("StepVar")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("MalzemeGrupId");

                    b.ToTable("malzemealtgrup", (string)null);
                });

            modelBuilder.Entity("Models.MalzemeAltGrup2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("DxfVar")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsUretim")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Kod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("MalzemeAltGrupId")
                        .HasColumnType("int");

                    b.Property<bool>("PdfVar")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("StepVar")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("MalzemeAltGrupId");

                    b.ToTable("malzemealtgrup2", (string)null);
                });

            modelBuilder.Entity("Models.MalzemeGrup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("DxfVar")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Kod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("PdfVar")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("StepVar")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("StokGrupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StokGrupId");

                    b.ToTable("malzemegrup", (string)null);
                });

            modelBuilder.Entity("Models.MalzemeStandart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Kod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StandartAdi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("malzemestandart", (string)null);
                });

            modelBuilder.Entity("Models.Marka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Kod")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("marka", (string)null);
                });

            modelBuilder.Entity("Models.MarkaAltGrup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Kod")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("MarkaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarkaId");

                    b.ToTable("markaaltgrup", (string)null);
                });

            modelBuilder.Entity("Models.MarkaAltGrupKategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Kod")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("MarkaAltGrupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarkaAltGrupId");

                    b.ToTable("markaaltgrupkategori", (string)null);
                });

            modelBuilder.Entity("Models.OlcuBirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Kod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tanim")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("olcubirim", (string)null);
                });

            modelBuilder.Entity("Models.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(91)
                        .HasColumnType("varchar(91)");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("int");

                    b.Property<int?>("FirmaId1")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Mail")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("PersonelAd")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("PersonelResimId")
                        .HasColumnType("int");

                    b.Property<string>("PersonelSoyad")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("PozisyonId")
                        .HasColumnType("int");

                    b.Property<int?>("PozisyonId1")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("YoneticiPersonelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.HasIndex("FirmaId1");

                    b.HasIndex("PersonelResimId");

                    b.HasIndex("PozisyonId");

                    b.HasIndex("PozisyonId1");

                    b.HasIndex("YoneticiPersonelId");

                    b.ToTable("personel", (string)null);
                });

            modelBuilder.Entity("Models.PersonelResim", b =>
                {
                    b.Property<int>("PersonelResimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImageFormat")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<byte[]>("ResimData")
                        .HasColumnType("longblob");

                    b.HasKey("PersonelResimId");

                    b.HasIndex("PersonelId");

                    b.ToTable("personelresim", (string)null);
                });

            modelBuilder.Entity("Models.Pozisyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Kod")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("pozisyon", (string)null);
                });

            modelBuilder.Entity("Models.Proje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Ad")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("AltGrupId")
                        .HasColumnType("int");

                    b.Property<string>("FilePaths")
                        .HasColumnType("longtext");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("MarkaId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjeNo")
                        .HasColumnType("int");

                    b.Property<int?>("ProjeTipId")
                        .HasColumnType("int");

                    b.Property<int?>("SatisSiparisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AltGrupId");

                    b.HasIndex("KategoriId");

                    b.HasIndex("MarkaId");

                    b.HasIndex("ProjeTipId");

                    b.HasIndex("SatisSiparisId");

                    b.ToTable("proje", (string)null);
                });

            modelBuilder.Entity("Models.ProjeSorumlu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Gorev")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PersonelId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("ProjeId");

                    b.ToTable("projesorumlu", (string)null);
                });

            modelBuilder.Entity("Models.ProjeStokKart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("Miktar")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("ProjeId")
                        .HasColumnType("int");

                    b.Property<int?>("StokKartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjeId");

                    b.HasIndex("StokKartId");

                    b.ToTable("projestokkart", (string)null);
                });

            modelBuilder.Entity("Models.ProjeSurecTanim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("projesurectanim", (string)null);
                });

            modelBuilder.Entity("Models.ProjeTakvim", b =>
                {
                    b.Property<int>("ProjeTakvimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("GerceklesenBaslangicTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("GerceklesenBitisTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("PlanlananBaslangicTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("PlanlananBitisTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ProjeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjeSurecId")
                        .HasColumnType("int");

                    b.HasKey("ProjeTakvimId");

                    b.HasIndex("ProjeId");

                    b.HasIndex("ProjeSurecId");

                    b.ToTable("projetakvim", (string)null);
                });

            modelBuilder.Entity("Models.ProjeTip", b =>
                {
                    b.Property<int>("ProjeTipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ProjeTipAd")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ProjeTipId");

                    b.ToTable("projetip", (string)null);
                });

            modelBuilder.Entity("Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Kod")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("rol", (string)null);
                });

            modelBuilder.Entity("Models.SatinalmaSiparisBaslik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CreatedByComputer")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DovizCinsiId")
                        .HasColumnType("int");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("int");

                    b.Property<int?>("OdemeVadeId")
                        .HasColumnType("int");

                    b.Property<int?>("ParcaGrupId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjeId")
                        .HasColumnType("int");

                    b.Property<string>("SiparisNo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("SiparisTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TeslimTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("Tutar")
                        .HasColumnType("double");

                    b.Property<string>("UpdatedByComputer")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UpdatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("satinalmasiparisbaslik", (string)null);
                });

            modelBuilder.Entity("Models.SatinalmaSiparisDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<double?>("BirimFiyat")
                        .HasColumnType("double");

                    b.Property<string>("CreatedByComputer")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DovizCinsiId")
                        .HasColumnType("int");

                    b.Property<double?>("Kdv")
                        .HasColumnType("double");

                    b.Property<int?>("Miktar")
                        .HasColumnType("int");

                    b.Property<int?>("OlcuBirimi")
                        .HasColumnType("int");

                    b.Property<int>("SatinalmaSiparisBaslikId")
                        .HasColumnType("int");

                    b.Property<int?>("StokKartId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByComputer")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UpdatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("SatinalmaSiparisBaslikId");

                    b.ToTable("satinalmasiparisdetay", (string)null);
                });

            modelBuilder.Entity("Models.SatinalmaTalepBaslik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CreatedByComputer")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("int");

                    b.Property<int?>("MalzemeGrupId")
                        .HasColumnType("int");

                    b.Property<bool?>("OnayDurum")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("OnayKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ProjeId")
                        .HasColumnType("int");

                    b.Property<string>("SatinalmaTalepNo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TalepEdenKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TalepTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TeslimTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedByComputer")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UpdatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.HasIndex("OnayKullaniciId");

                    b.HasIndex("TalepEdenKullaniciId");

                    b.ToTable("satinalmatalepbaslik", (string)null);
                });

            modelBuilder.Entity("Models.SatinalmaTalepDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CreatedByComputer")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Miktar")
                        .HasColumnType("int");

                    b.Property<int?>("OlcuBirimi")
                        .HasColumnType("int");

                    b.Property<bool?>("OnayDurum")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("OnayKullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OnayTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SatinalmaTalepBaslikId")
                        .HasColumnType("int");

                    b.Property<int?>("StokKartId")
                        .HasColumnType("int");

                    b.Property<int?>("StokKartId1")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByComputer")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("UpdatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OlcuBirimi");

                    b.HasIndex("SatinalmaTalepBaslikId");

                    b.HasIndex("StokKartId");

                    b.HasIndex("StokKartId1");

                    b.ToTable("satinalmatalepdetay", (string)null);
                });

            modelBuilder.Entity("Models.SatinalmaTeklifBaslik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CreatedByComputer")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DovizCinsiId")
                        .HasColumnType("int");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("int");

                    b.Property<int?>("OdemeVadeId")
                        .HasColumnType("int");

                    b.Property<int?>("ParcaGrupId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjeId")
                        .HasColumnType("int");

                    b.Property<int?>("TeklifGecerlilikSuresi")
                        .HasColumnType("int");

                    b.Property<string>("TeklifNo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TeklifTalepSurecId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TeklifTalepTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TeklifTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("TerminSuresi")
                        .HasColumnType("int");

                    b.Property<double?>("Tutar")
                        .HasColumnType("double");

                    b.Property<string>("UpdatedByComputer")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UpdatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("satinalmateklifbaslik", (string)null);
                });

            modelBuilder.Entity("Models.SatinalmaTeklifDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<double?>("BirimFiyat")
                        .HasColumnType("double");

                    b.Property<string>("CreatedByComputer")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DovizCinsiId")
                        .HasColumnType("int");

                    b.Property<double?>("Kdv")
                        .HasColumnType("double");

                    b.Property<int?>("Miktar")
                        .HasColumnType("int");

                    b.Property<int?>("OlcuBirimi")
                        .HasColumnType("int");

                    b.Property<int?>("SatinalmaTalepDetayId")
                        .HasColumnType("int");

                    b.Property<int>("SatinalmaTeklifBaslikId")
                        .HasColumnType("int");

                    b.Property<int?>("StokKartId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByComputer")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("UpdatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("SatinalmaTalepDetayId");

                    b.HasIndex("SatinalmaTeklifBaslikId");

                    b.ToTable("satinalmateklifdetay", (string)null);
                });

            modelBuilder.Entity("Models.SatisSiparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("Kdv")
                        .HasColumnType("double");

                    b.Property<double?>("OngoruMaliyeti")
                        .HasColumnType("double");

                    b.Property<string>("SiparisNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("SiparisTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("SiparisTutari")
                        .HasColumnType("double");

                    b.Property<DateTime?>("TeslimTarihi")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("satissiparis", (string)null);
                });

            modelBuilder.Entity("Models.Sehir", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Kod")
                        .HasColumnType("int");

                    b.Property<int?>("UlkeId")
                        .HasColumnType("int");

                    b.Property<int?>("UlkeId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UlkeId");

                    b.HasIndex("UlkeId1");

                    b.ToTable("sehir", (string)null);
                });

            modelBuilder.Entity("Models.StokGrup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Kod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("stokgrup", (string)null);
                });

            modelBuilder.Entity("Models.StokKart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ad")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<double?>("Agirlik")
                        .HasColumnType("double");

                    b.Property<double?>("Boy")
                        .HasColumnType("double");

                    b.Property<string>("Boyut")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Cap")
                        .HasColumnType("double");

                    b.Property<string>("CreatedByComputer")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("En")
                        .HasColumnType("double");

                    b.Property<double?>("EtKalınligi")
                        .HasColumnType("double");

                    b.Property<int?>("HammaddeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFromExcel")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Kod")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Malzeme")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("MalzemeAltGrup2Id")
                        .HasColumnType("int");

                    b.Property<int?>("MalzemeAltGrupId")
                        .HasColumnType("int");

                    b.Property<int?>("MalzemeGrupId")
                        .HasColumnType("int");

                    b.Property<int?>("MalzemeStandartId")
                        .HasColumnType("int");

                    b.Property<int?>("OlcuBirimId")
                        .HasColumnType("int");

                    b.Property<string>("ParcaAdi")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ParcaKod")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("StokGrupId")
                        .HasColumnType("int");

                    b.Property<int?>("StokTipId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedByComputer")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UpdatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("Uzunluk")
                        .HasColumnType("double");

                    b.Property<double?>("Yukseklik")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("HammaddeId");

                    b.HasIndex("MalzemeAltGrup2Id");

                    b.HasIndex("MalzemeAltGrupId");

                    b.HasIndex("MalzemeGrupId");

                    b.HasIndex("MalzemeStandartId");

                    b.HasIndex("OlcuBirimId");

                    b.HasIndex("StokGrupId");

                    b.HasIndex("StokTipId");

                    b.ToTable("stokkart", (string)null);
                });

            modelBuilder.Entity("Models.StokTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Kod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("stoktip", (string)null);
                });

            modelBuilder.Entity("Models.Teklif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AltGrupId")
                        .HasColumnType("int");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("Konusu")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("MarkaId")
                        .HasColumnType("int");

                    b.Property<string>("No")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("OngoruMaliyetDovizCinsi")
                        .HasColumnType("int");

                    b.Property<int?>("OngoruMaliyeti")
                        .HasColumnType("int");

                    b.Property<int?>("SatisSorumluId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("TeklifTutari")
                        .HasColumnType("double");

                    b.Property<int?>("TeklifTutariDovizCinsi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.HasIndex("SatisSorumluId");

                    b.ToTable("teklif", (string)null);
                });

            modelBuilder.Entity("Models.TeklifMaliyetDetay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Belge")
                        .HasColumnType("longtext");

                    b.Property<int?>("DovizCinsiId")
                        .HasColumnType("int");

                    b.Property<int?>("MaliyetTespitKanali")
                        .HasColumnType("int");

                    b.Property<int?>("MaliyetUnsuru")
                        .HasColumnType("int");

                    b.Property<int?>("OngorulenMaliyet")
                        .HasColumnType("int");

                    b.Property<int>("TeklifId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeklifId");

                    b.ToTable("teklifmaliyetdetay", (string)null);
                });

            modelBuilder.Entity("Models.TeklifSurec", b =>
                {
                    b.Property<int>("TeklifSurecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("BaslamaZamani")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("BitisZamani")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("SorumluKullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("Sure")
                        .HasColumnType("int");

                    b.Property<int>("TeklifId")
                        .HasColumnType("int");

                    b.Property<int>("TeklifSurecTanimId")
                        .HasColumnType("int");

                    b.HasKey("TeklifSurecId");

                    b.HasIndex("TeklifId");

                    b.HasIndex("TeklifSurecTanimId");

                    b.ToTable("teklifsurec", (string)null);
                });

            modelBuilder.Entity("Models.TeklifSurecTanim", b =>
                {
                    b.Property<int>("TeklifSurecTanimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Sure")
                        .HasColumnType("int");

                    b.Property<string>("TeklifSurecTanimAdi")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("VarsayilanSorumluPozisyon")
                        .HasColumnType("int");

                    b.HasKey("TeklifSurecTanimId");

                    b.ToTable("teklifsurectanim", (string)null);
                });

            modelBuilder.Entity("Models.TeklifTalep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AltGrupId")
                        .HasColumnType("int");

                    b.Property<int?>("FinansalTakvimId")
                        .HasColumnType("int");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsMaliyetOnaylandi")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMaliyetTalep")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMaliyetTamamlandi")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsTeklifSave")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MaliyetSorumluAtamaTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("MaliyetSorumluId")
                        .HasColumnType("int");

                    b.Property<int?>("MarkaId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferansKaynakId")
                        .HasColumnType("int");

                    b.Property<int?>("SatisSorumlusuId")
                        .HasColumnType("int");

                    b.Property<int?>("TeklifFiyatDovizId")
                        .HasColumnType("int");

                    b.Property<double?>("TeklifFiyati")
                        .HasColumnType("double");

                    b.Property<string>("TeklifKonusu")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TeklifNo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TeklifSuresi")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TeklifTalepTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TeklifTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TeslimBilgileri")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TeslimSuresi")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AltGrupId");

                    b.HasIndex("FinansalTakvimId");

                    b.HasIndex("FirmaId");

                    b.HasIndex("KategoriId");

                    b.HasIndex("MarkaId");

                    b.HasIndex("SatisSorumlusuId");

                    b.ToTable("tekliftalep", (string)null);
                });

            modelBuilder.Entity("Models.TeklifTalepBelge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BelgeAd")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DosyaAd")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("DosyaBoyut")
                        .HasColumnType("double");

                    b.Property<string>("DosyaUzanti")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DosyaVeri")
                        .HasColumnType("longtext");

                    b.Property<int>("TeklifTalepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeklifTalepId");

                    b.ToTable("tekliftalepbelge", (string)null);
                });

            modelBuilder.Entity("Models.TeklifTalepSurec", b =>
                {
                    b.Property<int>("TeklifTalepSurecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("BaslamaZamani")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("BitisZamani")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("SorumluKullaniciId")
                        .HasColumnType("int");

                    b.Property<int?>("Sure")
                        .HasColumnType("int");

                    b.Property<int>("TeklifTalepId")
                        .HasColumnType("int");

                    b.Property<int>("TeklifTalepSurecTanimId")
                        .HasColumnType("int");

                    b.HasKey("TeklifTalepSurecId");

                    b.HasIndex("TeklifTalepId");

                    b.HasIndex("TeklifTalepSurecTanimId");

                    b.ToTable("tekliftalepsurec", (string)null);
                });

            modelBuilder.Entity("Models.TeklifTalepSurecTanim", b =>
                {
                    b.Property<int>("TeklifTalepSurecTanimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Ekran")
                        .HasColumnType("int");

                    b.Property<int?>("Sure")
                        .HasColumnType("int");

                    b.Property<int?>("VarsayilanSorumluPozisyon")
                        .HasColumnType("int");

                    b.HasKey("TeklifTalepSurecTanimId");

                    b.ToTable("tekliftalepsurectanim", (string)null);
                });

            modelBuilder.Entity("Models.Ulke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Kod")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ulke", (string)null);
                });

            modelBuilder.Entity("Yetki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AlanId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<bool>("DuzenlemeYetki")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("EkranId")
                        .HasColumnType("int");

                    b.Property<bool>("GormeYetki")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AlanId");

                    b.HasIndex("EkranId");

                    b.HasIndex("MenuId");

                    b.HasIndex("RolId");

                    b.ToTable("yetki", (string)null);
                });

            modelBuilder.Entity("Alan", b =>
                {
                    b.HasOne("Menu", null)
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("AlanYetki", b =>
                {
                    b.HasOne("Alan", null)
                        .WithMany()
                        .HasForeignKey("AlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Menu", b =>
                {
                    b.HasOne("MenuGroup", null)
                        .WithMany()
                        .HasForeignKey("MenuGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MenuGroup", "MenuGroup")
                        .WithMany()
                        .HasForeignKey("MenuGroupId1");

                    b.Navigation("MenuGroup");
                });

            modelBuilder.Entity("Models.Firma", b =>
                {
                    b.HasOne("Models.Sehir", "Sehir")
                        .WithMany()
                        .HasForeignKey("SehirId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Sehir", null)
                        .WithMany("Firmalar")
                        .HasForeignKey("SehirId1");

                    b.HasOne("Models.Ulke", "Ulke")
                        .WithMany()
                        .HasForeignKey("UlkeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Ulke", null)
                        .WithMany("Firmalar")
                        .HasForeignKey("UlkeId1");

                    b.Navigation("Sehir");

                    b.Navigation("Ulke");
                });

            modelBuilder.Entity("Models.Kullanici", b =>
                {
                    b.HasOne("Models.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Rol", null)
                        .WithMany("Kullanicilar")
                        .HasForeignKey("RolId1");

                    b.Navigation("Personel");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Models.MalzemeAltGrup", b =>
                {
                    b.HasOne("Models.MalzemeGrup", "MalzemeGrup")
                        .WithMany("MalzemeAltGruplar")
                        .HasForeignKey("MalzemeGrupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MalzemeGrup");
                });

            modelBuilder.Entity("Models.MalzemeAltGrup2", b =>
                {
                    b.HasOne("Models.MalzemeAltGrup", "MalzemeAltGrup")
                        .WithMany("MalzemeAltGrup2ler")
                        .HasForeignKey("MalzemeAltGrupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MalzemeAltGrup");
                });

            modelBuilder.Entity("Models.MalzemeGrup", b =>
                {
                    b.HasOne("Models.StokGrup", "StokGrup")
                        .WithMany("MalzemeGruplar")
                        .HasForeignKey("StokGrupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("StokGrup");
                });

            modelBuilder.Entity("Models.MarkaAltGrup", b =>
                {
                    b.HasOne("Models.Marka", "Marka")
                        .WithMany("MarkaAltGruplar")
                        .HasForeignKey("MarkaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("Models.MarkaAltGrupKategori", b =>
                {
                    b.HasOne("Models.MarkaAltGrup", "MarkaAltGrup")
                        .WithMany("MarkaAltGrupKategoriler")
                        .HasForeignKey("MarkaAltGrupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MarkaAltGrup");
                });

            modelBuilder.Entity("Models.Personel", b =>
                {
                    b.HasOne("Models.Firma", "Firma")
                        .WithMany()
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Firma", null)
                        .WithMany("Personeller")
                        .HasForeignKey("FirmaId1");

                    b.HasOne("Models.PersonelResim", "PersonelResim")
                        .WithMany()
                        .HasForeignKey("PersonelResimId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Pozisyon", "Pozisyon")
                        .WithMany()
                        .HasForeignKey("PozisyonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Pozisyon", null)
                        .WithMany("Personeller")
                        .HasForeignKey("PozisyonId1");

                    b.HasOne("Models.Personel", "Yonetici")
                        .WithMany("BagliPersoneller")
                        .HasForeignKey("YoneticiPersonelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Firma");

                    b.Navigation("PersonelResim");

                    b.Navigation("Pozisyon");

                    b.Navigation("Yonetici");
                });

            modelBuilder.Entity("Models.PersonelResim", b =>
                {
                    b.HasOne("Models.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("Models.Proje", b =>
                {
                    b.HasOne("Models.MarkaAltGrup", "AltGrup")
                        .WithMany()
                        .HasForeignKey("AltGrupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.MarkaAltGrupKategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Marka", "Marka")
                        .WithMany()
                        .HasForeignKey("MarkaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.ProjeTip", "ProjeTip")
                        .WithMany("Projeler")
                        .HasForeignKey("ProjeTipId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.SatisSiparis", "SatisSiparis")
                        .WithMany()
                        .HasForeignKey("SatisSiparisId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AltGrup");

                    b.Navigation("Kategori");

                    b.Navigation("Marka");

                    b.Navigation("ProjeTip");

                    b.Navigation("SatisSiparis");
                });

            modelBuilder.Entity("Models.ProjeSorumlu", b =>
                {
                    b.HasOne("Models.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Proje", "Proje")
                        .WithMany()
                        .HasForeignKey("ProjeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Personel");

                    b.Navigation("Proje");
                });

            modelBuilder.Entity("Models.ProjeStokKart", b =>
                {
                    b.HasOne("Models.Proje", "Proje")
                        .WithMany()
                        .HasForeignKey("ProjeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.StokKart", "StokKart")
                        .WithMany()
                        .HasForeignKey("StokKartId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Proje");

                    b.Navigation("StokKart");
                });

            modelBuilder.Entity("Models.ProjeTakvim", b =>
                {
                    b.HasOne("Models.Proje", "Proje")
                        .WithMany()
                        .HasForeignKey("ProjeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.ProjeSurecTanim", "ProjeSurec")
                        .WithMany()
                        .HasForeignKey("ProjeSurecId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Proje");

                    b.Navigation("ProjeSurec");
                });

            modelBuilder.Entity("Models.SatinalmaSiparisDetay", b =>
                {
                    b.HasOne("Models.SatinalmaSiparisBaslik", "Baslik")
                        .WithMany("Detaylar")
                        .HasForeignKey("SatinalmaSiparisBaslikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baslik");
                });

            modelBuilder.Entity("Models.SatinalmaTalepBaslik", b =>
                {
                    b.HasOne("Models.Firma", "Firma")
                        .WithMany()
                        .HasForeignKey("FirmaId");

                    b.HasOne("Models.Kullanici", "OnayKullanici")
                        .WithMany()
                        .HasForeignKey("OnayKullaniciId");

                    b.HasOne("Models.Kullanici", "TalepEdenKullanici")
                        .WithMany()
                        .HasForeignKey("TalepEdenKullaniciId");

                    b.Navigation("Firma");

                    b.Navigation("OnayKullanici");

                    b.Navigation("TalepEdenKullanici");
                });

            modelBuilder.Entity("Models.SatinalmaTalepDetay", b =>
                {
                    b.HasOne("Models.OlcuBirim", null)
                        .WithMany()
                        .HasForeignKey("OlcuBirimi")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.SatinalmaTalepBaslik", "Baslik")
                        .WithMany("Detaylar")
                        .HasForeignKey("SatinalmaTalepBaslikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.StokKart", null)
                        .WithMany()
                        .HasForeignKey("StokKartId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.StokKart", "StokKart")
                        .WithMany()
                        .HasForeignKey("StokKartId1");

                    b.Navigation("Baslik");

                    b.Navigation("StokKart");
                });

            modelBuilder.Entity("Models.SatinalmaTeklifDetay", b =>
                {
                    b.HasOne("Models.SatinalmaTalepDetay", null)
                        .WithMany()
                        .HasForeignKey("SatinalmaTalepDetayId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.SatinalmaTeklifBaslik", "Baslik")
                        .WithMany("Detaylar")
                        .HasForeignKey("SatinalmaTeklifBaslikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baslik");
                });

            modelBuilder.Entity("Models.Sehir", b =>
                {
                    b.HasOne("Models.Ulke", "Ulke")
                        .WithMany()
                        .HasForeignKey("UlkeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Ulke", null)
                        .WithMany("Sehirler")
                        .HasForeignKey("UlkeId1");

                    b.Navigation("Ulke");
                });

            modelBuilder.Entity("Models.StokKart", b =>
                {
                    b.HasOne("Models.Hammadde", "Hammadde")
                        .WithMany("StokKartlar")
                        .HasForeignKey("HammaddeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.MalzemeAltGrup2", "MalzemeAltGrup2")
                        .WithMany("StokKartlar")
                        .HasForeignKey("MalzemeAltGrup2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.MalzemeAltGrup", "MalzemeAltGrup")
                        .WithMany("StokKartlar")
                        .HasForeignKey("MalzemeAltGrupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.MalzemeGrup", "MalzemeGrup")
                        .WithMany("StokKartlar")
                        .HasForeignKey("MalzemeGrupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.MalzemeStandart", "MalzemeStandart")
                        .WithMany("StokKartlar")
                        .HasForeignKey("MalzemeStandartId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.OlcuBirim", "OlcuBirim")
                        .WithMany("StokKartlar")
                        .HasForeignKey("OlcuBirimId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.StokGrup", "StokGrup")
                        .WithMany("StokKartlar")
                        .HasForeignKey("StokGrupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.StokTip", "StokTip")
                        .WithMany("StokKartlar")
                        .HasForeignKey("StokTipId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Hammadde");

                    b.Navigation("MalzemeAltGrup");

                    b.Navigation("MalzemeAltGrup2");

                    b.Navigation("MalzemeGrup");

                    b.Navigation("MalzemeStandart");

                    b.Navigation("OlcuBirim");

                    b.Navigation("StokGrup");

                    b.Navigation("StokTip");
                });

            modelBuilder.Entity("Models.Teklif", b =>
                {
                    b.HasOne("Models.Firma", null)
                        .WithMany()
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Personel", null)
                        .WithMany()
                        .HasForeignKey("SatisSorumluId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Models.TeklifMaliyetDetay", b =>
                {
                    b.HasOne("Models.Teklif", "Teklif")
                        .WithMany("MaliyetDetaylari")
                        .HasForeignKey("TeklifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teklif");
                });

            modelBuilder.Entity("Models.TeklifSurec", b =>
                {
                    b.HasOne("Models.Teklif", "Teklif")
                        .WithMany("Surecler")
                        .HasForeignKey("TeklifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.TeklifSurecTanim", "SurecTanim")
                        .WithMany("Surecler")
                        .HasForeignKey("TeklifSurecTanimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurecTanim");

                    b.Navigation("Teklif");
                });

            modelBuilder.Entity("Models.TeklifTalep", b =>
                {
                    b.HasOne("Models.MarkaAltGrup", null)
                        .WithMany()
                        .HasForeignKey("AltGrupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.ProjeTakvim", null)
                        .WithMany()
                        .HasForeignKey("FinansalTakvimId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Firma", null)
                        .WithMany()
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.MarkaAltGrupKategori", null)
                        .WithMany()
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Marka", null)
                        .WithMany()
                        .HasForeignKey("MarkaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Personel", null)
                        .WithMany()
                        .HasForeignKey("SatisSorumlusuId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Models.TeklifTalepBelge", b =>
                {
                    b.HasOne("Models.TeklifTalep", "TeklifTalep")
                        .WithMany("Belgeler")
                        .HasForeignKey("TeklifTalepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeklifTalep");
                });

            modelBuilder.Entity("Models.TeklifTalepSurec", b =>
                {
                    b.HasOne("Models.TeklifTalep", "TeklifTalep")
                        .WithMany("Surecler")
                        .HasForeignKey("TeklifTalepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.TeklifTalepSurecTanim", "SurecTanim")
                        .WithMany("Surecler")
                        .HasForeignKey("TeklifTalepSurecTanimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurecTanim");

                    b.Navigation("TeklifTalep");
                });

            modelBuilder.Entity("Yetki", b =>
                {
                    b.HasOne("Alan", "Alan")
                        .WithMany()
                        .HasForeignKey("AlanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Ekran", "Ekran")
                        .WithMany()
                        .HasForeignKey("EkranId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alan");

                    b.Navigation("Ekran");

                    b.Navigation("Menu");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Models.Firma", b =>
                {
                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("Models.Hammadde", b =>
                {
                    b.Navigation("StokKartlar");
                });

            modelBuilder.Entity("Models.MalzemeAltGrup", b =>
                {
                    b.Navigation("MalzemeAltGrup2ler");

                    b.Navigation("StokKartlar");
                });

            modelBuilder.Entity("Models.MalzemeAltGrup2", b =>
                {
                    b.Navigation("StokKartlar");
                });

            modelBuilder.Entity("Models.MalzemeGrup", b =>
                {
                    b.Navigation("MalzemeAltGruplar");

                    b.Navigation("StokKartlar");
                });

            modelBuilder.Entity("Models.MalzemeStandart", b =>
                {
                    b.Navigation("StokKartlar");
                });

            modelBuilder.Entity("Models.Marka", b =>
                {
                    b.Navigation("MarkaAltGruplar");
                });

            modelBuilder.Entity("Models.MarkaAltGrup", b =>
                {
                    b.Navigation("MarkaAltGrupKategoriler");
                });

            modelBuilder.Entity("Models.OlcuBirim", b =>
                {
                    b.Navigation("StokKartlar");
                });

            modelBuilder.Entity("Models.Personel", b =>
                {
                    b.Navigation("BagliPersoneller");
                });

            modelBuilder.Entity("Models.Pozisyon", b =>
                {
                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("Models.ProjeTip", b =>
                {
                    b.Navigation("Projeler");
                });

            modelBuilder.Entity("Models.Rol", b =>
                {
                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("Models.SatinalmaSiparisBaslik", b =>
                {
                    b.Navigation("Detaylar");
                });

            modelBuilder.Entity("Models.SatinalmaTalepBaslik", b =>
                {
                    b.Navigation("Detaylar");
                });

            modelBuilder.Entity("Models.SatinalmaTeklifBaslik", b =>
                {
                    b.Navigation("Detaylar");
                });

            modelBuilder.Entity("Models.Sehir", b =>
                {
                    b.Navigation("Firmalar");
                });

            modelBuilder.Entity("Models.StokGrup", b =>
                {
                    b.Navigation("MalzemeGruplar");

                    b.Navigation("StokKartlar");
                });

            modelBuilder.Entity("Models.StokTip", b =>
                {
                    b.Navigation("StokKartlar");
                });

            modelBuilder.Entity("Models.Teklif", b =>
                {
                    b.Navigation("MaliyetDetaylari");

                    b.Navigation("Surecler");
                });

            modelBuilder.Entity("Models.TeklifSurecTanim", b =>
                {
                    b.Navigation("Surecler");
                });

            modelBuilder.Entity("Models.TeklifTalep", b =>
                {
                    b.Navigation("Belgeler");

                    b.Navigation("Surecler");
                });

            modelBuilder.Entity("Models.TeklifTalepSurecTanim", b =>
                {
                    b.Navigation("Surecler");
                });

            modelBuilder.Entity("Models.Ulke", b =>
                {
                    b.Navigation("Firmalar");

                    b.Navigation("Sehirler");
                });
#pragma warning restore 612, 618
        }
    }
}
