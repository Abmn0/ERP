// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(YektamakDbContext))]
    [Migration("20250702072703_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Models.Firma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Adres")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Faks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Kod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LogoCariKod")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("LogoFirmaId")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("PostaKodu")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("SehirId")
                        .HasColumnType("int");

                    b.Property<int?>("SehirId1")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("UlkeId")
                        .HasColumnType("int");

                    b.Property<int?>("UlkeId1")
                        .HasColumnType("int");

                    b.Property<string>("VergiDairesi")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("VergiNo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("SehirId");

                    b.HasIndex("SehirId1");

                    b.HasIndex("UlkeId");

                    b.HasIndex("UlkeId1");

                    b.ToTable("firma", (string)null);
                });

            modelBuilder.Entity("Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedByComputer")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CreatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsSifreDegisti")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PersonelId")
                        .HasColumnType("int");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.Property<int?>("RolId1")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UpdatedByComputer")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UpdatedByUser")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.HasIndex("RolId");

                    b.HasIndex("RolId1");

                    b.ToTable("kullanici", (string)null);
                });

            modelBuilder.Entity("Models.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(91)
                        .HasColumnType("varchar(91)");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("int");

                    b.Property<int?>("FirmaId1")
                        .HasColumnType("int");

                    b.Property<string>("Kod")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Mail")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("PersonelAd")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("PersonelResimId")
                        .HasColumnType("int");

                    b.Property<string>("PersonelSoyad")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("PozisyonId")
                        .HasColumnType("int");

                    b.Property<int?>("PozisyonId1")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("YoneticiPersonelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.HasIndex("FirmaId1");

                    b.HasIndex("PersonelResimId");

                    b.HasIndex("PozisyonId");

                    b.HasIndex("PozisyonId1");

                    b.HasIndex("YoneticiPersonelId");

                    b.ToTable("personel", (string)null);
                });

            modelBuilder.Entity("Models.PersonelResim", b =>
                {
                    b.Property<int>("PersonelResimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImageFormat")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<byte[]>("ResimData")
                        .HasColumnType("longblob");

                    b.HasKey("PersonelResimId");

                    b.HasIndex("PersonelId");

                    b.ToTable("personelresim", (string)null);
                });

            modelBuilder.Entity("Models.Pozisyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Kod")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("pozisyon", (string)null);
                });

            modelBuilder.Entity("Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Kod")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("rol", (string)null);
                });

            modelBuilder.Entity("Models.Sehir", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Kod")
                        .HasColumnType("int");

                    b.Property<int?>("UlkeId")
                        .HasColumnType("int");

                    b.Property<int?>("UlkeId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UlkeId");

                    b.HasIndex("UlkeId1");

                    b.ToTable("sehir", (string)null);
                });

            modelBuilder.Entity("Models.Ulke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Kod")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ulke", (string)null);
                });

            modelBuilder.Entity("Models.Firma", b =>
                {
                    b.HasOne("Models.Sehir", "Sehir")
                        .WithMany()
                        .HasForeignKey("SehirId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Sehir", null)
                        .WithMany("Firmalar")
                        .HasForeignKey("SehirId1");

                    b.HasOne("Models.Ulke", "Ulke")
                        .WithMany()
                        .HasForeignKey("UlkeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Ulke", null)
                        .WithMany("Firmalar")
                        .HasForeignKey("UlkeId1");

                    b.Navigation("Sehir");

                    b.Navigation("Ulke");
                });

            modelBuilder.Entity("Models.Kullanici", b =>
                {
                    b.HasOne("Models.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Rol", null)
                        .WithMany("Kullanicilar")
                        .HasForeignKey("RolId1");

                    b.Navigation("Personel");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Models.Personel", b =>
                {
                    b.HasOne("Models.Firma", "Firma")
                        .WithMany()
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Firma", null)
                        .WithMany("Personeller")
                        .HasForeignKey("FirmaId1");

                    b.HasOne("Models.PersonelResim", "PersonelResim")
                        .WithMany()
                        .HasForeignKey("PersonelResimId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Pozisyon", "Pozisyon")
                        .WithMany()
                        .HasForeignKey("PozisyonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Pozisyon", null)
                        .WithMany("Personeller")
                        .HasForeignKey("PozisyonId1");

                    b.HasOne("Models.Personel", "Yonetici")
                        .WithMany("BagliPersoneller")
                        .HasForeignKey("YoneticiPersonelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Firma");

                    b.Navigation("PersonelResim");

                    b.Navigation("Pozisyon");

                    b.Navigation("Yonetici");
                });

            modelBuilder.Entity("Models.PersonelResim", b =>
                {
                    b.HasOne("Models.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("Models.Sehir", b =>
                {
                    b.HasOne("Models.Ulke", "Ulke")
                        .WithMany()
                        .HasForeignKey("UlkeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Models.Ulke", null)
                        .WithMany("Sehirler")
                        .HasForeignKey("UlkeId1");

                    b.Navigation("Ulke");
                });

            modelBuilder.Entity("Models.Firma", b =>
                {
                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("Models.Personel", b =>
                {
                    b.Navigation("BagliPersoneller");
                });

            modelBuilder.Entity("Models.Pozisyon", b =>
                {
                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("Models.Rol", b =>
                {
                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("Models.Sehir", b =>
                {
                    b.Navigation("Firmalar");
                });

            modelBuilder.Entity("Models.Ulke", b =>
                {
                    b.Navigation("Firmalar");

                    b.Navigation("Sehirler");
                });
#pragma warning restore 612, 618
        }
    }
}
