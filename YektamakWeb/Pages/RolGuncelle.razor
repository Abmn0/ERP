@page "/rol-guncelle/{Id:int}"
@inherits AuthorizedPageBase

@inject IRolService RolService
@inject NavigationManager Navigation

<h3>Rol Güncelle</h3>

@if (!ErisimKontrolEdildi)
{
    <p>Sayfa erişimi kontrol ediliyor...</p>
}
else if (!ErisimVar)
{
    <p class="text-danger">Bu sayfaya erişim yetkiniz yok.</p>
}
else if (rol == null)
{
    <p>Yükleniyor...</p>
}
else
{
    <EditForm Model="rol" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Ad</label>
            <InputText class="form-control" @bind-Value="rol.Ad" />
        </div>

        <div class="mb-3">
            <label class="form-label">Kod</label>
            <InputText class="form-control" @bind-Value="rol.Kod" />
        </div>

        <button class="btn btn-primary" type="submit">Güncelle</button>
        <button class="btn btn-secondary ms-2" type="button" @onclick="Iptal">İptal</button>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }
    private Rol? rol;

    // AuthorizedPageBase tarafından erişim kontrolü yapılırken bu yol kullanılacak
    protected override string GercekSayfaYolu => "/rol-guncelle";

    protected override async Task OnSayfaYuklendi()
    {
        rol = await RolService.GetByIdAsync(Id);
    }

    private async Task HandleValidSubmit()
    {
        await RolService.UpdateAsync(rol!);
        Navigation.NavigateTo("/roller");
    }

    private void Iptal()
    {
        Navigation.NavigateTo("/roller");
    }
}
