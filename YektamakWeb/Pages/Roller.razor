@page "/roller"
@inherits AuthorizedPageBase

@inject IRolService RolService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<h3>Roller</h3>

@if (!ErisimKontrolEdildi)
{
    <p>Sayfa erişimi kontrol ediliyor...</p>
}
else if (!ErisimVar)
{
    <p class="text-danger">Bu sayfaya erişim yetkiniz yok.</p>
}
else
{
    <button class="btn btn-success mb-3" @onclick="YeniRolEkle">Yeni Rol Ekle</button>

    @if (roller == null)
    {
        <p>Yükleniyor...</p>
    }
    else if (!roller.Any())
    {
        <p>Hiç rol bulunamadı.</p>
    }
    else
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Ad</th>
                    <th>Kod</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var rol in roller)
                {
                    <tr>
                        <td>@rol.Id</td>
                        <td>@rol.Ad</td>
                        <td>@rol.Kod</td>
                        <td>
                            <button class="btn btn-primary btn-sm me-2" @onclick="() => Guncelle(rol.Id)">Güncelle</button>
                            <button class="btn btn-danger btn-sm" @onclick="() => Sil(rol.Id)">Sil</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    private List<Rol> roller = new();

    protected override string GercekSayfaYolu => "/roller";

    protected override async Task OnSayfaYuklendi()
    {
        roller = await RolService.GetAllAsync();
    }

    private void YeniRolEkle()
    {
        Navigation.NavigateTo("/rol-ekle");
    }

    private void Guncelle(int id)
    {
        Navigation.NavigateTo($"/rol-guncelle/{id}");
    }

    private async Task Sil(int id)
    {
        var onay = await JS.InvokeAsync<bool>("confirm", "Silmek istediğinize emin misiniz?");
        if (onay)
        {
            await RolService.DeleteAsync(id);
            roller = await RolService.GetAllAsync(); // Listeyi yenile
        }
    }
}
