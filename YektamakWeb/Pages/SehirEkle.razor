@page "/sehir-ekle"
@inherits AuthorizedPageBase

@inject ISehirService SehirService
@inject IUlkeService UlkeService
@inject NavigationManager Navigation

<h3>Yeni Şehir Ekle</h3>

@if (!ErisimKontrolEdildi)
{
    <p>Sayfa erişimi kontrol ediliyor...</p>
}
else if (!ErisimVar)
{
    <p class="text-danger">Bu sayfaya erişim yetkiniz yok.</p>
}
else
{
    <EditForm Model="sehir" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Şehir Adı</label>
            <InputText class="form-control" @bind-Value="sehir.Ad" />
        </div>

        <div class="mb-3">
            <label class="form-label">Kod</label>
            <InputNumber class="form-control" @bind-Value="sehir.Kod" />
        </div>

        <div class="mb-3">
            <label class="form-label">Ülke</label>
            <InputSelect class="form-select" @bind-Value="sehir.UlkeId">
                <option value="">-- Ülke Seçin --</option>
                @foreach (var ulke in ulkeler)
                {
                    <option value="@ulke.Id">@ulke.Ad</option>
                }
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-success">Kaydet</button>
        <button type="button" class="btn btn-secondary ms-2" @onclick="Iptal">İptal</button>
    </EditForm>
}

@code {
    private Sehir sehir = new();
    private List<Ulke> ulkeler = new();

    protected override string GercekSayfaYolu => "/sehir-ekle";

    protected override async Task OnSayfaYuklendi()
    {
        ulkeler = await UlkeService.GetAllAsync();
    }

    private async Task HandleValidSubmit()
    {
        await SehirService.AddAsync(sehir);
        Navigation.NavigateTo("/sehirler");
    }

    private void Iptal()
    {
        Navigation.NavigateTo("/sehirler");
    }
}
