@page "/sehirler"
@inherits AuthorizedPageBase

@inject ISehirService SehirService
@inject NavigationManager Navigation

<h3>Şehir Listesi</h3>

@if (!ErisimKontrolEdildi)
{
    <p>Sayfa erişimi kontrol ediliyor...</p>
}
else if (!ErisimVar)
{
    <p class="text-danger">Bu sayfaya erişim yetkiniz yok.</p>
}
else if (sehirler is null)
{
    <p>Yükleniyor...</p>
}
else
{
    <button class="btn btn-primary mb-3" @onclick="@(() => Navigation.NavigateTo("/sehir-ekle"))">Yeni Şehir Ekle</button>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Ad</th>
                <th>Kod</th>
                <th>Ülke</th>
                <th>İşlemler</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var sehir in sehirler)
            {
                <tr>
                    <td>@sehir.Ad</td>
                    <td>@sehir.Kod</td>
                    <td>@sehir.Ulke?.Ad</td>
                    <td>
                        <button class="btn btn-sm btn-warning me-2" @onclick="@(() => Guncelle(sehir.Id))">Güncelle</button>
                        <button class="btn btn-sm btn-danger" @onclick="@(() => Sil(sehir.Id))">Sil</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Sehir>? sehirler;

    protected override string GercekSayfaYolu => "/sehirler";

    protected override async Task OnSayfaYuklendi()
    {
        sehirler = await SehirService.GetAllAsync();
    }

    private async Task Sil(int id)
    {
        await SehirService.DeleteAsync(id);
        sehirler = await SehirService.GetAllAsync();
    }

    private void Guncelle(int id)
    {
        Navigation.NavigateTo($"/sehir-guncelle/{id}");
    }
}
